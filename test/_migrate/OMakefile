########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#

.PHONY: e2e_test test clean clean_coverage

########################################################################
# OCaml configuration.
# Delete this section if you are not building OCaml files.
#

################################################
# Configuration.  You may want to modify any of these configuration
# variables.
#

#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true

#
if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

# for runner
OCAMLPACKS[] =
	batteries
#
# Include path
#
# OCAMLINCLUDES +=

#
# Various options
#
OCAMLFLAGS	  += -thread -g
OCAMLOPTFLAGS += -thread -g

FILES[] =
	run_tests

PROGRAM = run_tests

OCamlProgram($(PROGRAM), $(FILES))

########################################################################
#
test: e2e_test

e2e_test: clean_coverage $(PROGRAM) build_corelib build_stdlib build_rillc
	./$(PROGRAM)

clean:
	rm -f *~ *.opt *.cmi *.cmx *.o *.omc *.log *.cache *.bc *.o *.out $(PROGRAM)

clean_coverage:
    rm -f bisect-*.out
