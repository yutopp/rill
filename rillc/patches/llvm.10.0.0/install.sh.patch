--- original/install.sh	2020-05-21 06:32:57.280023877 +0900
+++ install.sh.modified	2020-05-21 07:56:05.140445487 +0900
@@ -5,17 +5,33 @@ libdir="$2"
 cmake="$3"
 make="$4"
 
-function filter_experimental_targets {
-    sed 's/AVR//g' | sed 's/Nios2//g' | sed 's/WebAssembly//g' | xargs
+function llvm_targets() {
+    "$llvm_config" --targets-built | sed 's/ /\n/g'
+}
+
+function remove_experimentals() {
+    sed 's/^WebAssembly\|AVR\|Nios2//g' | xargs
+}
+
+function only_experimentals() {
+    sed -n '/^WebAssembly\|AVR\|Nios2/p' | xargs
+}
+
+function join_colons() {
+    tr '\n' ';' | sed 's/;$//g' | xargs
 }
 
 function llvm_install {
     mkdir build
     cd build
 
+    local targets=`llvm_targets | remove_experimentals | sed 's/ /;/g'`
+    local experimental_targets=`llvm_targets | only_experimentals | sed 's/ /;/g'`
+
     "$cmake" \
         -DCMAKE_BUILD_TYPE="`"$llvm_config" --build-mode`" \
-        -DLLVM_TARGETS_TO_BUILD="`"$llvm_config" --targets-built | filter_experimental_targets | sed 's/ /;/g'`" \
+        -DLLVM_TARGETS_TO_BUILD="$targets" \
+        -LLVM_EXPERIMENTAL_TARGETS_TO_BUILD="$experimental_targets" \
         -DLLVM_OCAML_EXTERNAL_LLVM_LIBDIR="`"$llvm_config" --libdir`" \
         -DBUILD_SHARED_LIBS=`[ $1 = "shared" ] && echo TRUE || echo FALSE` \
         -DLLVM_OCAML_OUT_OF_TREE=TRUE \
@@ -33,17 +49,10 @@ function llvm_install {
     rm -rf build
 }
 
-if "$llvm_config" --link-static --libs && "$llvm_config" --link-shared --libs; then
-    patch -p1 < META.patch
-    llvm_install static
-    llvm_install shared
-elif "$llvm_config" --link-static --libs; then
+if "$llvm_config" --link-static --libs; then
     sed "s,%%LINKAGE%%,static," link-META.patch | patch -p1
     llvm_install static
-elif "$llvm_config" --link-shared --libs; then
-    sed "s,%%LINKAGE%%,shared," link-META.patch | patch -p1
-    llvm_install shared
 else
-    echo "WTF..."
+    echo "Cannot build llvm statically"
     exit 1
 fi
